
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  logoUrl: 'logoUrl',
  address: 'address',
  currency: 'currency',
  primaryColor: 'primaryColor',
  secondaryColor: 'secondaryColor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  fullName: 'fullName',
  email: 'email',
  passwordHash: 'passwordHash',
  isActive: 'isActive',
  roleId: 'roleId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  fullName: 'fullName',
  position: 'position',
  contractType: 'contractType',
  salaryOrRate: 'salaryOrRate',
  bankDetails: 'bankDetails',
  active: 'active',
  email: 'email',
  phone: 'phone',
  hireDate: 'hireDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PayRunScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  type: 'type',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PayslipScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  payRunId: 'payRunId',
  gross: 'gross',
  deductions: 'deductions',
  netPay: 'netPay',
  daysWorked: 'daysWorked',
  status: 'status',
  lockedAt: 'lockedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  payslipId: 'payslipId',
  employeeId: 'employeeId',
  amount: 'amount',
  mode: 'mode',
  note: 'note',
  receiptUrl: 'receiptUrl',
  createdAt: 'createdAt'
};

exports.Prisma.WorkScheduleScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  startDate: 'startDate',
  endDate: 'endDate',
  type: 'type',
  hoursPerDay: 'hoursPerDay'
};

exports.Prisma.AttendanceScalarFieldEnum = {
  id: 'id',
  workScheduleId: 'workScheduleId',
  date: 'date',
  workedHours: 'workedHours',
  validated: 'validated'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CompanyOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  logoUrl: 'logoUrl',
  address: 'address',
  currency: 'currency',
  primaryColor: 'primaryColor',
  secondaryColor: 'secondaryColor'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  id: 'id'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  fullName: 'fullName',
  email: 'email',
  passwordHash: 'passwordHash',
  roleId: 'roleId'
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  fullName: 'fullName',
  position: 'position',
  bankDetails: 'bankDetails',
  email: 'email',
  phone: 'phone'
};

exports.Prisma.PayRunOrderByRelevanceFieldEnum = {
  id: 'id',
  companyId: 'companyId'
};

exports.Prisma.PayslipOrderByRelevanceFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  payRunId: 'payRunId'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  id: 'id',
  payslipId: 'payslipId',
  employeeId: 'employeeId',
  note: 'note',
  receiptUrl: 'receiptUrl'
};

exports.Prisma.WorkScheduleOrderByRelevanceFieldEnum = {
  id: 'id',
  employeeId: 'employeeId'
};

exports.Prisma.AttendanceOrderByRelevanceFieldEnum = {
  id: 'id',
  workScheduleId: 'workScheduleId'
};
exports.RoleType = exports.$Enums.RoleType = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMIN: 'ADMIN',
  CASHIER: 'CASHIER'
};

exports.ContractType = exports.$Enums.ContractType = {
  DAILY: 'DAILY',
  HOURLY: 'HOURLY',
  FIXED: 'FIXED',
  FEE: 'FEE'
};

exports.PayRunType = exports.$Enums.PayRunType = {
  MONTHLY: 'MONTHLY',
  WEEKLY: 'WEEKLY',
  DAILY: 'DAILY'
};

exports.PayRunStatus = exports.$Enums.PayRunStatus = {
  DRAFT: 'DRAFT',
  APPROVED: 'APPROVED',
  CLOSED: 'CLOSED'
};

exports.PayslipStatus = exports.$Enums.PayslipStatus = {
  DRAFT: 'DRAFT',
  APPROVED: 'APPROVED',
  PAID: 'PAID',
  PARTIAL: 'PARTIAL',
  PENDING: 'PENDING'
};

exports.PaymentMode = exports.$Enums.PaymentMode = {
  CASH: 'CASH',
  BANK_TRANSFER: 'BANK_TRANSFER',
  ORANGE_MONEY: 'ORANGE_MONEY',
  WAVE: 'WAVE',
  OTHER: 'OTHER'
};

exports.Prisma.ModelName = {
  Company: 'Company',
  Role: 'Role',
  User: 'User',
  Employee: 'Employee',
  PayRun: 'PayRun',
  Payslip: 'Payslip',
  Payment: 'Payment',
  WorkSchedule: 'WorkSchedule',
  Attendance: 'Attendance'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/app/src/generated",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x"
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/app/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Single database schema for multi-tenant application\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated\"\n  binaryTargets = [\"native\", \"debian-openssl-3.0.x\", \"linux-musl-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum RoleType {\n  SUPER_ADMIN\n  ADMIN\n  CASHIER\n}\n\nenum ContractType {\n  DAILY\n  HOURLY\n  FIXED\n  FEE\n}\n\nenum PayRunType {\n  MONTHLY\n  WEEKLY\n  DAILY\n}\n\nenum PayRunStatus {\n  DRAFT\n  APPROVED\n  CLOSED\n}\n\nenum PayslipStatus {\n  DRAFT\n  APPROVED\n  PAID\n  PARTIAL\n  PENDING\n}\n\nenum PaymentMode {\n  CASH\n  BANK_TRANSFER\n  ORANGE_MONEY\n  WAVE\n  OTHER\n}\n\nmodel Company {\n  id             String  @id @default(uuid())\n  name           String\n  logoUrl        String?\n  address        String?\n  currency       String  @default(\"Fcfa\")\n  primaryColor   String  @default(\"#1E40AF\")\n  secondaryColor String  @default(\"#2563EB\")\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  users     User[]\n  employees Employee[]\n  payRuns   PayRun[]\n}\n\nmodel Role {\n  id   String   @id @default(uuid())\n  name RoleType @unique @default(ADMIN)\n\n  users User[]\n}\n\nmodel User {\n  id        String   @id @default(uuid())\n  companyId String?\n  company   Company? @relation(fields: [companyId], references: [id])\n\n  fullName     String\n  email        String  @unique\n  passwordHash String\n  isActive     Boolean @default(true)\n\n  roleId String\n  role   Role   @relation(fields: [roleId], references: [id])\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Employee {\n  id        String  @id @default(uuid())\n  companyId String\n  company   Company @relation(fields: [companyId], references: [id])\n\n  fullName     String\n  position     String?\n  contractType ContractType\n  salaryOrRate Decimal      @db.Decimal(14, 2)\n  bankDetails  String?\n  active       Boolean      @default(true)\n  email        String?\n  phone        String?\n  hireDate     DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  payslips      Payslip[]\n  payments      Payment[]\n  workSchedules WorkSchedule[]\n}\n\nmodel PayRun {\n  id        String  @id @default(uuid())\n  companyId String\n  company   Company @relation(fields: [companyId], references: [id])\n\n  periodStart DateTime\n  periodEnd   DateTime\n  type        PayRunType\n  status      PayRunStatus @default(DRAFT)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  payslips Payslip[]\n}\n\nmodel Payslip {\n  id         String   @id @default(uuid())\n  employeeId String\n  employee   Employee @relation(fields: [employeeId], references: [id])\n\n  payRunId String\n  payRun   PayRun @relation(fields: [payRunId], references: [id])\n\n  gross      Decimal       @default(0) @db.Decimal(14, 2)\n  deductions Decimal       @default(0) @db.Decimal(14, 2)\n  netPay     Decimal       @default(0) @db.Decimal(14, 2)\n  daysWorked Int?\n  status     PayslipStatus @default(DRAFT)\n  lockedAt   DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  payments Payment[]\n\n  @@unique([employeeId, payRunId])\n}\n\nmodel Payment {\n  id        String  @id @default(uuid())\n  payslipId String\n  payslip   Payslip @relation(fields: [payslipId], references: [id])\n\n  employeeId String\n  employee   Employee @relation(fields: [employeeId], references: [id])\n\n  amount     Decimal     @db.Decimal(14, 2)\n  mode       PaymentMode\n  note       String?\n  receiptUrl String?\n\n  createdAt DateTime @default(now())\n}\n\nmodel WorkSchedule {\n  id         String   @id @default(uuid())\n  employeeId String\n  employee   Employee @relation(fields: [employeeId], references: [id])\n\n  startDate   DateTime\n  endDate     DateTime\n  type        ContractType\n  hoursPerDay Int?\n\n  attendances Attendance[]\n}\n\nmodel Attendance {\n  id             String       @id @default(uuid())\n  workScheduleId String\n  workSchedule   WorkSchedule @relation(fields: [workScheduleId], references: [id])\n\n  date        DateTime\n  workedHours Int?\n  validated   Boolean  @default(false)\n}\n",
  "inlineSchemaHash": "7dcc290619070dfa02130544d52f285b3958c8acd2f1a9dbf6938247b4defea2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primaryColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondaryColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompanyToUser\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"payRuns\",\"kind\":\"object\",\"type\":\"PayRun\",\"relationName\":\"CompanyToPayRun\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"enum\",\"type\":\"RoleType\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RoleToUser\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToUser\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractType\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"salaryOrRate\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hireDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"EmployeeToPayslip\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"EmployeeToPayment\"},{\"name\":\"workSchedules\",\"kind\":\"object\",\"type\":\"WorkSchedule\",\"relationName\":\"EmployeeToWorkSchedule\"}],\"dbName\":null},\"PayRun\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToPayRun\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"PayRunType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayRunStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payslips\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PayRunToPayslip\"}],\"dbName\":null},\"Payslip\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPayslip\"},{\"name\":\"payRunId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payRun\",\"kind\":\"object\",\"type\":\"PayRun\",\"relationName\":\"PayRunToPayslip\"},{\"name\":\"gross\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deductions\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"netPay\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"daysWorked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PayslipStatus\"},{\"name\":\"lockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPayslip\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslipId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payslip\",\"kind\":\"object\",\"type\":\"Payslip\",\"relationName\":\"PaymentToPayslip\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToPayment\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"mode\",\"kind\":\"enum\",\"type\":\"PaymentMode\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiptUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WorkSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToWorkSchedule\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ContractType\"},{\"name\":\"hoursPerDay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"attendances\",\"kind\":\"object\",\"type\":\"Attendance\",\"relationName\":\"AttendanceToWorkSchedule\"}],\"dbName\":null},\"Attendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workScheduleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workSchedule\",\"kind\":\"object\",\"type\":\"WorkSchedule\",\"relationName\":\"AttendanceToWorkSchedule\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workedHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"validated\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

